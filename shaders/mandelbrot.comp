#version 430
layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, rgba8) uniform writeonly image2D dst;

layout(binding = 0) uniform sampler1D colors;

uniform vec2 center = vec2(1, 0.8);
uniform float scale = 0.5;
uniform int maxIterations = 256;

void main() {
    ivec2 threadId = ivec2(gl_GlobalInvocationID.xy);
    ivec2 dstSize = imageSize(dst);

    if (any(greaterThan(threadId, dstSize)))
        return;

    vec2 z, c;
    c = (vec2(threadId) / min(dstSize.x, dstSize.y)) * scale - center;
    z = vec2(0);
    int i;
    for (i = 0; i < maxIterations; i++) {
        float x = (z.x * z.x - z.y * z.y) + c.x;
        float y = (z.y * z.x + z.x * z.y) + c.y;

        if (x * x + y * y > 4.0)
            break;

        z.x = x;
        z.y = y;
    }

    vec4 value = texture(colors, i == maxIterations ? 0.0 : i / float(maxIterations));
    imageStore(dst, threadId, value);
}
