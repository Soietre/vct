#version 430

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(rgba16f, binding = 0) uniform image3D voxelColor;
layout(rgba16f, binding = 1) uniform image3D voxelNormal;

void main() {
    ivec3 threadId = ivec3(gl_GlobalInvocationID.xyz);

    if (any(greaterThan(threadId, imageSize(voxelColor).xyz))) {
        return;
    }

    vec4 value = imageLoad(voxelColor, threadId);
    if (value.a > 0) {
        imageStore(voxelColor, threadId, value / value.a);
    }
    value = imageLoad(voxelNormal, threadId);
    if (value.a > 0) {
        imageStore(voxelNormal, threadId, value / value.a);
    }
}