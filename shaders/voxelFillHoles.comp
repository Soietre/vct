#version 430

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(binding = 0, rgba8) uniform readonly image3D voxelSrc;
layout(binding = 1, rgba8) uniform writeonly image3D voxelDst;

void main() {
    ivec3 threadId = ivec3(gl_GlobalInvocationID.xyz);

    if (any(greaterThan(threadId, imageSize(voxelSrc).xyz))) {
        return;
    }

    vec4 current = imageLoad(voxelSrc, threadId);
    if (current.a == 0) {
        float count = 0;
        for (int i = -1; i <= 1; ++i) {
            for (int j = -1; j <= 1; ++j) {
                for (int k = -1; k <= 1; ++k) {
                    vec4 value = imageLoad(voxelSrc, threadId + ivec3(i, j, k));
                    if (value.a > 0) {
                        current += value;
                        count += 1;
                    }
                }
            }
        }

        if (count > 0) {
            current /= count;
        }
    }

    imageStore(voxelDst, threadId, current);
}
